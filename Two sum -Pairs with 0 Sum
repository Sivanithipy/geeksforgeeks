class Solution {
    public static ArrayList<ArrayList<Integer>> getPairs(int[] arr) {
        HashSet<Integer> seen = new HashSet<>();
        HashSet<String> used = new HashSet<>();
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();
        for (int num : arr) {
            int complement = -num;
            if (seen.contains(complement)) {
                int a = Math.min(num, complement);
                int b = Math.max(num, complement);
                String key = a + "," + b;

                if (!used.contains(key)) {
                    ArrayList<Integer> pair = new ArrayList<>();
                    pair.add(a);
                    pair.add(b);
                    result.add(pair);
                    used.add(key);
                }
            }
            seen.add(num);
        }
        result.sort((x, y) -> {
            if (!x.get(0).equals(y.get(0))) return x.get(0) - y.get(0);
            return x.get(1) - y.get(1);
        });

        return result;
    }
}
